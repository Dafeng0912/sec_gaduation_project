<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dafeng.sec.circuit.domain.admissionprocess.repo.dao.AdmissionProcessDao">
  <resultMap id="BaseResultMap" type="com.dafeng.sec.circuit.domain.admissionprocess.entity.AdmissionProcess">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="execution" jdbcType="VARCHAR" property="execution" />
    <result column="order" jdbcType="INTEGER" property="order" />
    <result column="partner" jdbcType="VARCHAR" property="partner" />
    <result column="schedule" jdbcType="VARCHAR" property="schedule" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, `content`, `time`, `execution`, `order`, `partner`, `schedule`
  </sql>
  <select id="selectByExample" parameterType="com.dafeng.sec.circuit.domain.admissionprocess.entity.example.AdmissionProcessExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `admission-process`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dafeng.sec.circuit.domain.admissionprocess.entity.example.AdmissionProcessExample">
    delete from `admission-process`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dafeng.sec.circuit.domain.admissionprocess.entity.AdmissionProcess">
    insert into `admission-process` (id, name, content, 
      time, execution, order, 
      partner, schedule)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{time,jdbcType=VARCHAR}, #{execution,jdbcType=VARCHAR}, #{order,jdbcType=INTEGER}, 
      #{partner,jdbcType=VARCHAR}, #{schedule,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective"  keyProperty="id" useGeneratedKeys="true"  parameterType="com.dafeng.sec.circuit.domain.admissionprocess.entity.AdmissionProcess">
    insert into `admission-process`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="content != null">
        `content`,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="execution != null">
        `execution`,      </if>
      <if test="order != null">
        `order`,
      </if>
      <if test="partner != null">
        `partner`,
      </if>
      <if test="schedule != null">
        `schedule`
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="execution != null">
        #{execution,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="partner != null">
        #{partner,jdbcType=VARCHAR},
      </if>
      <if test="schedule != null">
        #{schedule,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dafeng.sec.circuit.domain.admissionprocess.entity.example.AdmissionProcessExample" resultType="java.lang.Long">
    select count(*) from admission-process
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `admission-process`
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        `content` = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.execution != null">
        `execution` = #{record.execution,jdbcType=VARCHAR},
      </if>
      <if test="record.order != null">
        `order` = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.partner != null">
        `partner` = #{record.partner,jdbcType=VARCHAR},
      </if>
      <if test="record.schedule != null">
        `schedule` = #{record.schedule,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `admission-process`
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `content` = #{record.content,jdbcType=VARCHAR},
      `time` = #{record.time,jdbcType=VARCHAR},
      `execution` = #{record.execution,jdbcType=VARCHAR},
      `order` = #{record.order,jdbcType=INTEGER},
      `partner` = #{record.partner,jdbcType=VARCHAR},
      `schedule` = #{record.schedule,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

</mapper>