<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dafeng.sec.circuit.domain.corporateinformation.repo.dao.CorporateInformationDao">
  <resultMap id="BaseResultMap" type="com.dafeng.sec.circuit.domain.corporateinformation.entity.CorporateInformation">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="manager" jdbcType="VARCHAR" property="manager" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dafeng.sec.circuit.domain.corporateinformation.entity.CorporateInformation">
    <result column="manager" jdbcType="LONGVARCHAR" property="manager" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `company`, `user_id`,`manager`
  </sql>
  <sql id="Blob_Column_List">
    `manager`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dafeng.sec.circuit.domain.corporateinformation.entity.example.CorporateInformationExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `corporate-information`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dafeng.sec.circuit.domain.corporateinformation.entity.example.CorporateInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `corporate-information`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dafeng.sec.circuit.domain.corporateinformation.entity.example.CorporateInformationExample">
    delete from `corporate-information`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dafeng.sec.circuit.domain.corporateinformation.entity.CorporateInformation">
    insert into `corporate-information` (id, company, user_id, 
      manager)
    values (#{id,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{manager,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective"  keyProperty="id" useGeneratedKeys="true"  parameterType="com.dafeng.sec.circuit.domain.corporateinformation.entity.CorporateInformation">
    insert into `corporate-information`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="company != null">
        `company`,
      </if>
      <if test="userId != null">
        `user_id`,
      </if>
      <if test="manager != null">
        `manager`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dafeng.sec.circuit.domain.corporateinformation.entity.example.CorporateInformationExample" resultType="java.lang.Long">
    select count(*) from `corporate-information`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `corporate-information`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update `corporate-information`
    set `id` = #{record.id,jdbcType=INTEGER},
      `company` = #{record.company,jdbcType=VARCHAR},
      `user_id` = #{record.userId,jdbcType=INTEGER},
      `manager` = #{record.manager,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `corporate-information`
    set `id` = #{record.id,jdbcType=INTEGER},
      `company` = #{record.company,jdbcType=VARCHAR},
      `user_id` = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>